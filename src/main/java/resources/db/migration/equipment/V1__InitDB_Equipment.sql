-- ************************* SqlDBM: PostgreSQL *************************
-- ****** Generated by SqlDBM: Workshop, v46 by Finn1435@rambler.ru *****

-- ************************************** barcode

CREATE TABLE IF NOT EXISTS "public".barcode
(
    barcode_id bigint NOT NULL,
    barcode    integer NOT NULL,
    CONSTRAINT PK_barcode PRIMARY KEY ( barcode_id )
);

CREATE SEQUENCE IF NOT EXISTS public.barcode_seq
    INCREMENT 50
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;
--    OWNED BY barcode.barcode_id;

ALTER SEQUENCE public.barcode_seq
    OWNER TO admin;


CREATE TABLE IF NOT EXISTS "public".groups
(
    group_id   bigint NOT NULL,
    group_name character(50) NOT NULL,
    parent_id  bigint NULL,
    CONSTRAINT PK_groups PRIMARY KEY ( group_id ),
    CONSTRAINT FK_10_1 FOREIGN KEY ( parent_id ) REFERENCES "public".groups ( group_id )
);

    CREATE INDEX IF NOT EXISTS FK_Index_parentID ON "public".groups
    (
        parent_id
    );

-- SEQUENCE: public.groups_seq

-- DROP SEQUENCE IF EXISTS public.groups_seq;

CREATE SEQUENCE IF NOT EXISTS public.groups_seq
    INCREMENT 50
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;
--    OWNED BY groups.groups_id;

ALTER SEQUENCE public.groups_seq
    OWNER TO admin;

CREATE TABLE IF NOT EXISTS "public".firma
(
    firma_id  bigint NOT NULL,
    firm_name character(50) NOT NULL,
    CONSTRAINT PK_1 PRIMARY KEY ( firma_id )
);

CREATE SEQUENCE IF NOT EXISTS public.firma_seq
    INCREMENT 50
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;
--    OWNED BY firma.firma_id;

ALTER SEQUENCE public.firma_seq
    OWNER TO admin;


CREATE TABLE IF NOT EXISTS "public".element
(
    element_id  bigint NOT NULL,
    name        character(50) NOT NULL,
    description character(800) NULL,
    parent_id   bigint NULL,
    CONSTRAINT PK_component PRIMARY KEY ( element_id ),
    CONSTRAINT unique_component_name_constraint UNIQUE ( name ),
    CONSTRAINT FK_10 FOREIGN KEY ( parent_id ) REFERENCES "public".element ( element_id )
);

    CREATE INDEX IF NOT EXISTS FK_2 ON "public".element
    (
        parent_id
    );

-- SEQUENCE: public.element_seq

-- DROP SEQUENCE IF EXISTS public.element_seq;

CREATE SEQUENCE IF NOT EXISTS public.element_seq
    INCREMENT 50
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;
--    OWNED BY element.element_id;

ALTER SEQUENCE public.element_seq
    OWNER TO admin;


CREATE TABLE IF NOT EXISTS "public".element_groups
(
    element_id bigint NULL,
    group_id   bigint NULL,
    CONSTRAINT PK_element_groups PRIMARY KEY ( element_id, group_id ),
    CONSTRAINT FK_11 FOREIGN KEY ( element_id ) REFERENCES "public"."element" ( element_id ),
    CONSTRAINT FK_12 FOREIGN KEY ( group_id ) REFERENCES "public".groups ( group_id )
);

    CREATE INDEX IF NOT EXISTS FK_Index_elementID ON element_groups
    (
        element_id
    );

    CREATE INDEX IF NOT EXISTS FK_Index_groupID ON "public".element_groups
    (
        group_id
    );


CREATE TABLE IF NOT EXISTS "public".elements_composite
(
    element_source      bigint NULL,
    element_destination bigint NULL,
    CONSTRAINT PK_elements_composite PRIMARY KEY ( element_source, element_destination ),
    CONSTRAINT FK_14 FOREIGN KEY ( element_source ) REFERENCES "public"."element" ( element_id ),
    CONSTRAINT FK_15 FOREIGN KEY ( element_destination ) REFERENCES "public"."element" ( element_id )
);

    CREATE INDEX IF NOT EXISTS FK_Index_element_source ON "public".elements_composite
    (
        element_source
    );

    CREATE INDEX IF NOT EXISTS FK_Index_element_destination ON "public".elements_composite
    (
        element_destination
    );


CREATE TABLE IF NOT EXISTS "public".attribute_value
(
    attr_value_id         bigint NOT NULL,
    name                  character(50) NOT NULL,
    group_attr_value_id   bigint NULL,
    element_attr_value_id bigint NOT NULL,
    CONSTRAINT PK_attribute PRIMARY KEY ( attr_value_id ),
    CONSTRAINT unique_attr_name_constraint UNIQUE ( name ),
    CONSTRAINT FK_9_2 FOREIGN KEY ( group_attr_value_id ) REFERENCES "public".groups ( group_id ),
    CONSTRAINT FK_9_3 FOREIGN KEY ( element_attr_value_id ) REFERENCES "public"."element" ( element_id )
);

    CREATE INDEX IF NOT EXISTS FK_Index_attr_attr_valueID ON "public".attribute_value
    (
        group_attr_value_id
    );

    CREATE INDEX IF NOT EXISTS FK_Index_attr_elem_attr_valueID ON "public".attribute_value
    (
        element_attr_value_id
    );


CREATE TABLE IF NOT EXISTS "public".attribute
(
    name           character(50) NOT NULL,
    attribute_id1  bigint NOT NULL,
    attribute_id   bigint NOT NULL,
    CONSTRAINT PK_attribute_1 PRIMARY KEY ( attribute_id ),
    CONSTRAINT FK_11_1 FOREIGN KEY ( attribute_id1 ) REFERENCES "public".attribute_value ( attr_value_id )
);

    CREATE INDEX IF NOT EXISTS FK_Index_attributeID ON "public".attribute
    (
        attribute_id
    );

-- SEQUENCE: public.attribute_seq

-- DROP SEQUENCE IF EXISTS public.attribute_seq;

CREATE SEQUENCE IF NOT EXISTS public.attribute_seq
    INCREMENT 50
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1;

ALTER SEQUENCE public.attribute_seq
    OWNER TO admin;

CREATE TABLE IF NOT EXISTS "public".attribute_double_value
(
    id         bigint NOT NULL,
    value real NULL,
    CONSTRAINT PK_attribute_double_value PRIMARY KEY ( id ),
    CONSTRAINT FK_7_1 FOREIGN KEY ( id ) REFERENCES "public".attribute_value ( attr_value_id )
);


CREATE TABLE IF NOT EXISTS "public".attribute_integer_value
(
    attribute_id bigint NOT NULL,
    value        integer NULL,
    CONSTRAINT PK_attr_integer_value PRIMARY KEY ( attribute_id ),
    CONSTRAINT FK_7_2 FOREIGN KEY ( attribute_id ) REFERENCES "public".attribute_value ( attr_value_id )
);


CREATE TABLE IF NOT EXISTS "public".attribute_string_value
(
    attribute_id bigint NOT NULL,
    value        character(50) NULL,
    CONSTRAINT PK_attr_string_value PRIMARY KEY ( attribute_id ),
    CONSTRAINT FK_7_3 FOREIGN KEY ( attribute_id ) REFERENCES "public".attribute_value ( attr_value_id )
);

-- View: public.get_groups_with_recursion

-- DROP VIEW public.get_groups_with_recursion;

CREATE OR REPLACE VIEW public.get_groups_with_recursion
 AS
 WITH RECURSIVE temp_table AS (
         SELECT g.group_id,
            g.parent_id,
            g.group_name,
            1 AS level,
            '/'::text || g.group_name::text AS path,
            ARRAY[row_number() OVER (ORDER BY g.group_name)] AS path_sort
           FROM groups g
          WHERE g.parent_id IS NULL
        UNION ALL
         SELECT g.group_id,
            g.parent_id,
            g.group_name,
            t_1.level + 1 AS level,
            (t_1.path || '/'::text) || g.group_name::text AS path,
            t_1.path_sort || row_number() OVER (PARTITION BY g.parent_id ORDER BY g.group_name) AS path_sort
           FROM temp_table t_1,
            groups g
          WHERE g.parent_id = t_1.group_id
        )
 SELECT t.group_id,
    lpad(''::text, (t.level - 1) * 8) || t.group_name::text AS name,
    t.level, t.parent_id
   FROM temp_table t
  ORDER BY t.path_sort;

ALTER TABLE public.get_groups_with_recursion
    OWNER TO admin;