-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.attribute
(
    attribute_id integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    unit smallint,
    CONSTRAINT attribute_pkey PRIMARY KEY (attribute_id),
    CONSTRAINT unique_attr_name_constraint UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.attribute_integer_value
(
    attr_int_id integer NOT NULL,
    value integer,
    CONSTRAINT attribute_integer_value_pkey PRIMARY KEY (attr_int_id)
);

CREATE TABLE IF NOT EXISTS public.attribute_string_value
(
    attr_str_val integer NOT NULL,
    value character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT attribute_string_value_pkey PRIMARY KEY (attr_str_val)
);

CREATE TABLE IF NOT EXISTS public.component
(
    component_id integer NOT NULL,
    description character varying(2048) COLLATE pg_catalog."default",
    is_composite boolean,
    is_electric boolean,
    is_electronic boolean,
    is_mechanic boolean,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT component_pkey PRIMARY KEY (component_id),
    CONSTRAINT unique_component_name_constraint UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.component_attribute
(
    comp_id integer NOT NULL,
    attr_id integer NOT NULL,
    CONSTRAINT component_attribute_pkey PRIMARY KEY (attr_id, comp_id)
);

CREATE TABLE IF NOT EXISTS public.component_relationship
(
    parent_id integer NOT NULL,
    child_id integer NOT NULL,
    CONSTRAINT component_relationship_pkey PRIMARY KEY (parent_id, child_id)
);

CREATE TABLE IF NOT EXISTS public.equipment
(
    equipment_id integer NOT NULL,
    firm_name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    model character varying(128) COLLATE pg_catalog."default" NOT NULL,
    type character varying(128) COLLATE pg_catalog."default",
    CONSTRAINT equipment_pkey PRIMARY KEY (equipment_id),
    CONSTRAINT unique_equipment_model_constraint UNIQUE (model)
);

CREATE TABLE IF NOT EXISTS public.equipment_component
(
    equip_id integer NOT NULL,
    comp_id integer NOT NULL,
    CONSTRAINT equipment_component_pkey PRIMARY KEY (comp_id, equip_id)
);

CREATE TABLE IF NOT EXISTS public.groups
(
    group_id integer NOT NULL,
    group_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT groups_pkey PRIMARY KEY (group_id)
);

ALTER TABLE IF EXISTS public.component_attribute
    ADD CONSTRAINT foreign_key_attr_id_constraint FOREIGN KEY (attr_id)
    REFERENCES public.attribute (attribute_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.component_attribute
    ADD CONSTRAINT foreign_key_comp_id_constraint FOREIGN KEY (comp_id)
    REFERENCES public.component (component_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.component_relationship
    ADD CONSTRAINT foreign_key_child_id_constraint FOREIGN KEY (child_id)
    REFERENCES public.component (component_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.component_relationship
    ADD CONSTRAINT foreign_key_parent_id_constrain FOREIGN KEY (parent_id)
    REFERENCES public.component (component_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.equipment_component
    ADD CONSTRAINT foreign_key_equip_is_constraint FOREIGN KEY (equip_id)
    REFERENCES public.equipment (equipment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.equipment_component
    ADD CONSTRAINT foreign_key_comp_id_constraint FOREIGN KEY (comp_id)
    REFERENCES public.component (component_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.groups
    ADD CONSTRAINT group_id FOREIGN KEY (group_id)
    REFERENCES public.equipment (equipment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;